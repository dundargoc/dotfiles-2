export EDITOR=vim
export VISUAL=vim
export SUDO_EDIT=vim
export WINEDEBUG=-all
export SDL_VIDEO_FULLSCREEN_DISPLAY=0
export SSH_AUTH_SOCK=$HOME/.gnupg/S.gpg-agent.ssh


myoutube() {
    mplayer -vo vaapi -cache 8192 -fs $(youtube-dl -g $1)
}

greph() {
    history 0 | grep $1
}

pip_outdated() {
    pip freeze | cut -d = -f 1 | xargs -n 1 pip search | grep -B2 'LATEST:'
}

new_buildout() {
    wget http://downloads.buildout.org/2/bootstrap.py
    echo "[versions]" > versions.cfg
    cat > buildout.cfg << EOF
[buildout]
develop = .
extends = versions.cfg
versions = versions
show-picked-versions = true
parts = scripts
        test


[scripts]
recipe = zc.recipe.egg:script
interpreter = py
eggs = wheel

[test]
relative-paths = true
recipe = zc.recipe.testrunner
defaults = ['--auto-color']
EOF
    python3 -m venv .venv
    .venv/bin/python -m ensurepip
    .venv/bin/python bootstrap.py
}

# after ranger quits, cd to the chosen directory.
ra() {
    tempfile='/tmp/chosendir'
   /usr/bin/ranger --choosedir="$tempfile" "${@:-$(pwd)}"
   test -f "$tempfile" &&
   if [ "$(cat -- "$tempfile")" != "$(echo -n `pwd`)" ]; then
     cd -- "$(cat "$tempfile")"
   fi
   rm -f -- "$tempfile"
}

share_internet() {
    if [[ -z "$1" ]] then
        echo "share_internet <dev with internet> <dev with clients>"
        return 1
    fi
    if [[ -z "$2" ]] then
        echo "share_internet <dev with internet> <dev with clients>"
        return 1
    fi
    # share_internet from(dev with clients) to (dev with internet)
    sudo sysctl net.ipv4.ip_forward=1
    sudo iptables -t nat -A POSTROUTING -o $1 -j MASQUERADE
    sudo iptables -A FORWARD -i $2 -o $1 -j ACCEPT
}

# kill all processes that use port $1
portkill() {
    lsof -i :$1 | tail -n +2 | awk '{ print $2 }' | xargs kill
}

clean_whiteboard() {
    convert "$1" -morphology Convolve DoG:15,100,0 -negate -normalize -blur 0x1 -channel
}

screen_record() {
    ffcast -w ffmpeg -y -f x11grab -show_region 1 -framerate 15 -video_size %s -i %D+%c -codec:v huffyuv -vf crop="iw-mod(iw\\,2):ih-mod(ih\\,2)" $1
}

update_mirrorlist() {
    reflector -n 24 -c AT -c DE -f 10 -l 10 | sudo tee /etc/pacman.d/mirrorlist
}

PYTHONSTARTUP=~/.pythonrc.py
export PYTHONSTARTUP

if [[ -x '/usr/bin/virtualenvwrapper.sh' ]]; then
    source /usr/bin/virtualenvwrapper.sh
fi


if [[ $TERM == xterm-termite && -f '/etc/profile.d/vte.sh' ]]; then
    . /etc/profile.d/vte.sh
    __vte_osc7
fi
