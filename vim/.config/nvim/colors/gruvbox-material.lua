-- Based on sainnhe/gruvbox-material
--
vim.o.background = 'dark'
vim.cmd.highlight 'clear'
if vim.g.syntax_on then
  vim.cmd.syntax 'reset'
end
vim.g.colors_name = 'gruvbox-material'

local black = '#504945'
local red = '#ea6962'
local green = '#a9b665'
local yellow = '#d8a657'
local blue = '#7daea3'
local magenta = '#d3869b'
local cyan = '#89b482'
local white = '#d4be98'
local bright_black = '#504945'
local bright_red = '#ea6962'
local bright_green = '#a9b665'
local bright_yellow = '#d8a657'
local bright_blue = '#7daea3'
local bright_magenta = '#d3869b'
local bright_cyan = '#89b482'
local bright_white = '#d4be98'
vim.g.terminal_color_0 = black
vim.g.terminal_color_1 = red
vim.g.terminal_color_2 = green
vim.g.terminal_color_3 = yellow
vim.g.terminal_color_4 = blue
vim.g.terminal_color_5 = magenta
vim.g.terminal_color_6 = cyan
vim.g.terminal_color_7 = white
vim.g.terminal_color_8 = bright_black
vim.g.terminal_color_9 = bright_red
vim.g.terminal_color_10 = bright_green
vim.g.terminal_color_11 = bright_yellow
vim.g.terminal_color_12 = bright_blue
vim.g.terminal_color_13 = bright_magenta
vim.g.terminal_color_14 = bright_cyan
vim.g.terminal_color_15 = bright_white
local theme = {
  LspDiagnosticsFloatingWarning = { link = 'DiagnosticFloatingWarn' },
  LspDiagnosticsFloatingInformation = { link = 'DiagnosticFloatingInfo' },
  LspDiagnosticsFloatingHint = { link = 'DiagnosticFloatingHint' },
  diffIndexLine = { link = 'Purple' },
  diffLine = { link = 'Grey' },
  diffOldFile = { link = 'Yellow' },
  diffChanged = { link = 'Blue' },
  LightspeedGreyWash = { link = 'Grey' },
  LightspeedMaskedChar = { link = 'Purple' },
  LightspeedPendingOpArea = { fg = '#1d2021', bg = bright_green },
  LightspeedUnlabeledMatch = { fg = bright_white, bold = true },
  LightspeedShortcut = { fg = '#1d2021', bg = bright_red, bold = true },
  LightspeedLabelDistant = { underline = true, fg = bright_blue, bold = true },
  LightspeedLabel = { underline = true, fg = bright_red, bold = true },
  MiniTablineFill = { link = 'TabLineFill' },
  MiniSurround = { link = 'IncSearch' },
  MiniStarterSection = { link = 'Title' },
  MiniStarterItem = { link = 'Normal' },
  MiniStarterInactive = { link = 'Comment' },
  MiniStarterHeader = { link = 'Yellow' },
  MiniStarterFooter = { link = 'Orange' },
  MiniJump = { link = 'Search' },
  MiniIndentscopeSymbol = { link = 'Grey' },
  MiniCursorwordCurrent = { link = 'CurrentWord' },
  MiniCursorword = { link = 'CurrentWord' },
  MiniCompletionActiveParameter = { link = 'LspSignatureActiveParameter' },
  MiniStarterQuery = { link = 'Blue' },
  MiniStarterItemPrefix = { link = 'Yellow' },
  MiniStarterItemBullet = { link = 'Grey' },
  MiniTrailspace = { bg = bright_red },
  MiniTestPass = { fg = bright_green, bold = true },
  MiniTestFail = { fg = bright_red, bold = true },
  MiniTestEmphasis = { bold = true },
  MiniTablineVisible = { fg = '#ddc7a1', bg = '#3c3836' },
  MiniTablineTabpagesection = { fg = '#1d2021', bg = '#a89984', bold = true },
  MiniTablineModifiedVisible = { fg = bright_blue, bg = '#3c3836' },
  MiniTablineModifiedHidden = { fg = '#928374', bg = '#3c3836' },
  MiniTablineModifiedCurrent = { fg = bright_blue, bg = bright_black },
  MiniTablineHidden = { fg = '#928374', bg = '#3c3836' },
  MiniTablineCurrent = { fg = '#ddc7a1', bg = bright_black },
  MiniStatuslineModeVisual = { fg = '#1d2021', bg = bright_red, bold = true },
  MiniStatuslineModeReplace = { fg = '#1d2021', bg = bright_yellow, bold = true },
  MiniStatuslineModeOther = { fg = '#1d2021', bg = bright_magenta, bold = true },
  MiniStatuslineModeNormal = { fg = '#1d2021', bg = '#a89984', bold = true },
  MiniStatuslineModeInsert = { fg = '#1d2021', bg = bright_green, bold = true },
  MiniStatuslineModeCommand = { fg = '#1d2021', bg = bright_blue, bold = true },
  MiniStatuslineModeInactive = { fg = '#a89984', bg = '#282828' },
  Operator = { fg = '#e78a4e' },
  MiniStatuslineFilename = { fg = '#a89984', bg = '#282828' },
  MiniStatuslineFileinfo = { fg = '#a89984', bg = '#32302f' },
  MiniStatuslineDevinfo = { fg = '#a89984', bg = '#32302f' },
  MiniStarterCurrent = { nocombine = true },
  MiniJump2dSpot = { nocombine = true, fg = '#e78a4e', bold = true },
  MiniIndentscopePrefix = { nocombine = true },
  InclineNormalNC = { fg = '#928374', bg = '#3c3836' },
  TargetFileName = { link = 'Grey' },
  DefinitionCount = { link = 'Grey' },
  ReferencesCount = { link = 'Grey' },
  String = { fg = bright_green },
  Number = { fg = bright_magenta },
  SpecialKey = { fg = bright_black },
  EndOfBuffer = { fg = bright_black, bg = '#1d2021' },
  TermCursor = { reverse = true },
  TermCursorNC = {  },
  NonText = { fg = bright_black },
  Directory = { fg = bright_green },
  ErrorMsg = { underline = true, fg = bright_red, bold = true },
  DiagnosticInformation = { link = 'DiagnosticInfo' },
  Search = { fg = '#1d2021', bg = bright_green },
  CurSearch = {  },
  MoreMsg = { fg = bright_yellow, bold = true },
  ModeMsg = { fg = bright_white, bold = true },
  LineNr = { fg = bright_black },
  LineNrAbove = { link = 'LineNr' },
  LineNrBelow = { link = 'LineNr' },
  CursorLineNr = { fg = '#928374' },
  CursorLineSign = { link = 'SignColumn' },
  DiagnosticWarning = { link = 'DiagnosticWarn' },
  LspSagaFinderSelection = { link = 'Fg' },
  LspSagaAutoPreview = { link = 'Green' },
  LineDiagTuncateLine = { link = 'Yellow' },
  LspLinesDiagBorder = { link = 'Yellow' },
  DefinitionIcon = { link = 'Blue' },
  LspSagaDefPreviewBorder = { link = 'Blue' },
  DiagnosticVirtualTextHint = { link = 'VirtualTextHint' },
  LspSagaShTruncateLine = { link = 'Green' },
  LspSagaSignatureHelpBorder = { link = 'Green' },
  DiagnosticVirtualTextError = { link = 'VirtualTextError' },
  LspSagaDocTruncateLine = { link = 'Green' },
  LspSagaHoverBorder = { link = 'Green' },
  LspSagaCodeActionContent = { link = 'Green' },
  DiagnosticVirtualTextWarn = { link = 'VirtualTextWarning' },
  WarningMsg = { fg = bright_yellow, bold = true },
  LspSagaCodeActionTruncateLine = { link = 'Purple' },
  DiagnosticVirtualTextInfo = { link = 'VirtualTextInfo' },
  DiagnosticUnderlineHint = { underline = true, special = '#d3d3d3' },
  DiagnosticUnderlineError = { underline = true, special = '#ff0000' },
  DiagnosticUnderlineWarn = { underline = true, special = '#ffa500' },
  DiagnosticUnderlineInfo = { underline = true, special = '#add8e6' },
  DiagnosticFloatingHint = { link = 'HintFloat' },
  DiagnosticFloatingError = { link = 'ErrorFloat' },
  DiagnosticFloatingWarn = { link = 'WarningFloat' },
  DiagnosticFloatingInfo = { link = 'InfoFloat' },
  DiagnosticSignHint = { link = 'GreenSign' },
  DiagnosticSignError = { link = 'RedSign' },
  DiagnosticSignWarn = { link = 'YellowSign' },
  DiagnosticSignInfo = { link = 'BlueSign' },
  LspSagaCodeActionBorder = { link = 'Purple' },
  LspSagaRenamePromptPrefix = { link = 'Blue' },
  LspSagaRenameBorder = { link = 'Purple' },
  LspSagaDiagnosticBorder = { link = 'Orange' },
  LspSagaDiagnosticSource = { link = 'Orange' },
  LspSagaHintTrunCateLine = { link = 'LspSagaDiagnosticHint' },
  LspSagaInfoTrunCateLine = { link = 'LspSagaDiagnosticInfo' },
  LspSagaWarnTrunCateLine = { link = 'LspSagaDiagnosticWarn' },
  LspSagaErrorTrunCateLine = { link = 'LspSagaDiagnosticError' },
  LspSagaDiagnosticHint = { link = 'Green' },
  LspSagaDiagnosticInfo = { link = 'Blue' },
  LspSagaDiagnosticWarn = { link = 'Yellow' },
  LspSagaDiagnosticError = { link = 'Red' },
  DefinitionPreviewTitle = { fg = bright_blue, bold = true },
  LspSagaCodeActionTitle = { fg = bright_magenta, bold = true },
  LspSagaDiagnosticHeader = { fg = '#e78a4e', bold = true },
  LspFloatWinBorder = { fg = '#1d2021', bg = '#1d2021' },
  DapUIBreakpointsInfo = { link = 'Green' },
  DapUIBreakpointsPath = { link = 'Blue' },
  DapUIWatchesError = { link = 'Red' },
  DapUIWatchesValue = { link = 'Green' },
  DapUIWatchesEmpty = { link = 'Red' },
  DapUIFloatBorder = { link = 'Blue' },
  DapUILineNumber = { link = 'Blue' },
  DapUISource = { link = 'Purple' },
  DapUIStoppedThread = { link = 'Blue' },
  DapUIThread = { link = 'Green' },
  DapUIDecoration = { link = 'Blue' },
  DapUIType = { link = 'Purple' },
  DapUIScope = { link = 'Blue' },
  DapUIBreakpointsCurrentLine = { fg = bright_blue, bold = true },
  DapUIModifiedValue = { fg = bright_blue, bold = true },
  NotifyTRACETitle = { link = 'Purple' },
  NotifyDEBUGTitle = { link = 'Grey' },
  NotifyINFOTitle = { link = 'Green' },
  NotifyWARNTitle = { link = 'Yellow' },
  NotifyERRORTitle = { link = 'Red' },
  NotifyTRACEIcon = { link = 'Purple' },
  NotifyDEBUGIcon = { link = 'Grey' },
  NotifyINFOIcon = { link = 'Green' },
  NotifyWARNIcon = { link = 'Yellow' },
  NotifyERRORIcon = { link = 'Red' },
  NotifyTRACEBorder = { link = 'Purple' },
  NotifyDEBUGBorder = { link = 'Grey' },
  NotifyINFOBorder = { link = 'Green' },
  NotifyWARNBorder = { link = 'Yellow' },
  NotifyERRORBorder = { link = 'Red' },
  BufferTabpageFill = { fg = '#1d2021', bg = '#1d2021' },
  BufferTabpages = { fg = '#1d2021', bg = '#a89984', bold = true },
  BufferInactiveTarget = { fg = bright_yellow, bg = '#3c3836', bold = true },
  BufferInactiveSign = { fg = '#7c6f64', bg = '#3c3836' },
  BufferInactiveMod = { fg = '#928374', bg = '#3c3836' },
  BufferInactiveIndex = { fg = '#928374', bg = '#3c3836' },
  BufferInactive = { fg = '#928374', bg = '#3c3836' },
  BufferVisibleTarget = { fg = bright_yellow, bg = '#3c3836', bold = true },
  BufferVisibleSign = { fg = '#a89984', bg = '#3c3836' },
  BufferVisibleMod = { fg = bright_blue, bg = '#3c3836' },
  BufferVisibleIndex = { fg = '#ddc7a1', bg = '#3c3836' },
  BufferVisible = { fg = '#ddc7a1', bg = '#3c3836' },
  BufferCurrentTarget = { fg = bright_red, bg = bright_black, bold = true },
  BufferCurrentSign = { fg = '#a89984', bg = bright_black },
  BufferCurrentMod = { fg = bright_blue, bg = bright_black },
  BufferCurrentIndex = { fg = '#ddc7a1', bg = bright_black },
  BufferCurrent = { fg = '#ddc7a1', bg = bright_black },
  rainbowcol7 = { link = 'Purple' },
  rainbowcol6 = { link = 'Blue' },
  rainbowcol5 = { link = 'Aqua' },
  rainbowcol4 = { link = 'Green' },
  rainbowcol3 = { link = 'Yellow' },
  rainbowcol2 = { link = 'Orange' },
  rainbowcol1 = { link = 'Red' },
  IndentBlanklineSpaceCharBlankline = { link = 'LineNr' },
  IndentBlanklineSpaceChar = { link = 'LineNr' },
  IndentBlanklineChar = { link = 'LineNr' },
  IndentBlanklineContextChar = { link = 'Grey' },
  GitSignsCurrentLineBlame = { link = 'Grey' },
  GitSignsDeleteLn = { link = 'DiffDelete' },
  GitSignsChangeLn = { link = 'DiffChange' },
  GitSignsAddLn = { link = 'DiffAdd' },
  GitSignsDeleteNr = { link = 'Red' },
  GitSignsChangeNr = { link = 'Blue' },
  GitSignsAddNr = { link = 'Green' },
  GitSignsDelete = { link = 'RedSign' },
  GitSignsChange = { link = 'BlueSign' },
  GitSignsAdd = { link = 'GreenSign' },
  TelescopeSelection = { link = 'DiffAdd' },
  TelescopePromptPrefix = { link = 'Orange' },
  TelescopeBorder = { link = 'Grey' },
  TelescopeMatching = { fg = bright_green, bold = true },
  TroubleCode = { link = 'Grey' },
  TroubleSource = { link = 'Grey' },
  TroubleText = { link = 'Fg' },
  CmpItemKindTypeParameter = { link = 'Yellow' },
  CmpItemKindOperator = { link = 'Orange' },
  CmpItemKindEvent = { link = 'Orange' },
  CmpItemKindStruct = { link = 'Yellow' },
  CmpItemKindConstant = { link = 'Blue' },
  CmpItemKindEnumMember = { link = 'Purple' },
  CmpItemKindFolder = { link = 'Aqua' },
  CmpItemKindReference = { link = 'Aqua' },
  CmpItemKindFile = { link = 'Aqua' },
  CmpItemKindColor = { link = 'Aqua' },
  CmpItemKindSnippet = { link = 'Aqua' },
  CmpItemKindKeyword = { link = 'Red' },
  CmpItemKindEnum = { link = 'Yellow' },
  CmpItemKindValue = { link = 'Purple' },
  CmpItemKindUnit = { link = 'Purple' },
  NormalFloat = { fg = '#ddc7a1', bg = '#3c3836' },
  CmpItemKindProperty = { link = 'Blue' },
  CmpItemKindModule = { link = 'Yellow' },
  CmpItemKindInterface = { link = 'Yellow' },
  CmpItemKindClass = { link = 'Yellow' },
  CmpItemKindVariable = { link = 'Blue' },
  CmpItemKindField = { link = 'Green' },
  CmpItemKindConstructor = { link = 'Green' },
  CmpItemKindFunction = { link = 'Green' },
  CmpItemKindMethod = { link = 'Green' },
  CmpItemKindText = { link = 'Fg' },
  CmpItemKind = { link = 'Yellow' },
  CmpItemMenu = { link = 'Fg' },
  CmpItemAbbrDeprecated = { link = 'Grey' },
  CmpItemAbbr = { link = 'Fg' },
  CmpItemAbbrMatchFuzzy = { fg = bright_green, bold = true },
  CmpItemAbbrMatch = { fg = bright_green, bold = true },
  BookmarkAnnotationLine = { link = 'DiffAdd' },
  BookmarkLine = { link = 'DiffChange' },
  BookmarkAnnotationSign = { link = 'GreenSign' },
  BookmarkSign = { link = 'BlueSign' },
  FloatermBorder = { link = 'Grey' },
  LspSignatureActiveParameter = { link = 'Search' },
  agitDiffHeader = { link = 'Purple' },
  agitDiffAdd = { link = 'Green' },
  agitDiffRemove = { link = 'Red' },
  agitStatMessage = { link = 'Orange' },
  agitStatAdded = { link = 'Green' },
  agitStatRemoved = { link = 'Red' },
  agitStatFile = { link = 'Blue' },
  agitTag = { link = 'Orange' },
  agitRef = { link = 'Aqua' },
  agitHead = { link = 'Orange' },
  agitRemote = { link = 'Red' },
  agitDate = { link = 'Green' },
  agitTree = { link = 'Grey' },
  Error = { fg = bright_red },
  Warning = {  },
  Blamer = { link = 'Grey' },
  QuickScopeSecondary = { underline = true, fg = bright_blue },
  QuickScopePrimary = { underline = true, fg = bright_cyan },
  IncSearch = { fg = '#1d2021', bg = bright_red },
  WhichKeyDesc = { link = 'Blue' },
  WhichKeyGroup = { link = 'Yellow' },
  WhichKeySeperator = { link = 'Green' },
  WhichKey = { link = 'Red' },
  BufTabLineFill = { link = 'TabLineFill' },
  BufTabLineHidden = { link = 'TabLineFill' },
  BufTabLineActive = { link = 'TabLine' },
  BufTabLineCurrent = { link = 'TabLineSel' },
  SignatureMarkerText = { link = 'PurpleSign' },
  SignatureMarkText = { link = 'BlueSign' },
  RainbowLevel8 = { link = 'Green' },
  RainbowLevel7 = { link = 'Yellow' },
  RainbowLevel6 = { link = 'Purple' },
  RainbowLevel5 = { link = 'Blue' },
  RainbowLevel4 = { link = 'Aqua' },
  RainbowLevel3 = { link = 'Green' },
  StatusLineTerm = { fg = '#ddc7a1', bg = '#282828' },
  TSStringEscape = { link = 'Green' },
  TSString = { link = 'Aqua' },
  NvimInvalidStringBody = { link = 'NvimStringBody' },
  NvimInvalidEnvironmentSigil = { link = 'NvimInvalidOptionSigil' },
  NvimInvalidFloat = { link = 'NvimInvalidNumber' },
  TSNumber = { link = 'Purple' },
  TSConstant = { link = 'Fg' },
  TSConstMacro = { link = 'BlueItalic' },
  TSConstBuiltin = { link = 'BlueItalic' },
  CocSemVariable = { link = 'TSVariable' },
  TSComment = { link = 'Comment' },
  multiple_cursors_cursor = { link = 'Cursor' },
  CocSemEvent = { link = 'TSLabel' },
  CocSemModifier = { link = 'TSOperator' },
  CocErrorFloat = { link = 'ErrorFloat' },
  TSCharacter = { link = 'Aqua' },
  TSBoolean = { link = 'Purple' },
  PurpleSign = { fg = bright_magenta },
  HopCursor = { link = 'Cursor' },
  Orange = { fg = '#e78a4e' },
  Bold = {  },
  HopUnmatched = { link = 'Grey' },
  SignifyLineDelete = { link = 'DiffDelete' },
  SignifyLineChangeDelete = { link = 'DiffChange' },
  SignifyLineChange = { link = 'DiffChange' },
  SignifyLineAdd = { link = 'DiffAdd' },
  SignifySignChangeDelete = { link = 'PurpleSign' },
  SignifySignDelete = { link = 'RedSign' },
  SignifySignChange = { link = 'BlueSign' },
  SignifySignAdd = { link = 'GreenSign' },
  GitGutterChangeDeleteLineNr = { link = 'Purple' },
  GitGutterDeleteLineNr = { link = 'Red' },
  GitGutterChangeLineNr = { link = 'Blue' },
  GitGutterAddLineNr = { link = 'Green' },
  GitGutterChangeDeleteLine = { link = 'DiffChange' },
  GitGutterDeleteLine = { link = 'DiffDelete' },
  GitGutterChangeLine = { link = 'DiffChange' },
  GitGutterAddLine = { link = 'DiffAdd' },
  CtrlPPrtCursor = { link = 'Blue' },
  CtrlPNoEntries = { link = 'Red' },
  CtrlPStats = { fg = '#a89984', bg = '#3c3836', bold = true },
  CtrlPMode2 = { fg = '#1d2021', bg = bright_blue, bold = true },
  CtrlPMode1 = { fg = bright_blue, bg = '#3c3836', bold = true },
  CtrlPLinePre = { fg = '#3c3836' },
  CtrlPPrtBase = { fg = '#3c3836' },
  CtrlPMatch = { fg = bright_green, bold = true },
  deniteSelectedLin = { link = 'Green' },
  deniteStatusLinePath = { fg = bright_white, bg = '#3c3836' },
  deniteStatusLineNumber = { fg = bright_magenta, bg = '#3c3836' },
  deniteInput = { fg = bright_green, bg = '#3c3836', bold = true },
  deniteMatchedRange = { underline = true, fg = bright_green, bold = true },
  deniteMatchedChar = { fg = bright_green, bold = true },
  ClapSearchText = { link = 'ClapFuzzyMatches' },
  ClapFile = { link = 'Fg' },
  ClapProviderAbout = { link = 'ClapBlines' },
  Function = { fg = bright_green },
  ClapProviderColon = { link = 'ClapBlines' },
  ClapBlinesLineNr = { link = 'Grey' },
  ClapFuzzyMatches12 = { link = 'ClapFuzzyMatches' },
  ClapFuzzyMatches11 = { link = 'ClapFuzzyMatches' },
  ClapFuzzyMatches10 = { link = 'ClapFuzzyMatches' },
  ClapFuzzyMatches9 = { link = 'ClapFuzzyMatches' },
  ClapFuzzyMatches8 = { link = 'ClapFuzzyMatches' },
  ClapFuzzyMatches7 = { link = 'ClapFuzzyMatches' },
  ClapFuzzyMatches6 = { link = 'ClapFuzzyMatches' },
  Keyword = { fg = bright_red },
  ClapFuzzyMatches5 = { link = 'ClapFuzzyMatches' },
  ClapFuzzyMatches4 = { link = 'ClapFuzzyMatches' },
  ClapFuzzyMatches3 = { link = 'ClapFuzzyMatches' },
  ClapFuzzyMatches2 = { link = 'ClapFuzzyMatches' },
  Constant = { fg = bright_cyan },
  ClapFuzzyMatches1 = { link = 'ClapFuzzyMatches' },
  ClapPreview = { link = 'Pmenu' },
  ClapDisplay = { link = 'Pmenu' },
  ClapInput = { link = 'Pmenu' },
  ClapNoMatchesFound = { fg = bright_red, bold = true },
  ClapFuzzyMatches = { fg = bright_green, bold = true },
  ClapMatches6 = { fg = bright_magenta, bold = true },
  ClapMatches5 = { fg = bright_blue, bold = true },
  ClapMatches4 = { fg = bright_cyan, bold = true },
  ClapMatches3 = { fg = bright_yellow, bold = true },
  ClapMatches2 = { fg = '#e78a4e', bold = true },
  ClapMatches1 = { fg = bright_red, bold = true },
  ClapProviderId = { fg = '#ddc7a1', bold = true },
  ClapBlines = { fg = '#ddc7a1' },
  ClapSpinner = { fg = '#e78a4e', bg = '#3c3836', bold = true },
  ClapCurrentSelection = { bg = '#282828', bold = true },
  ClapSelected = { fg = bright_red, bold = true },
  Lf_hl_popup_spin = { link = 'Purple' },
  Lf_hl_popup_blank = { link = 'Lf_hl_popup_window' },
  Lf_hl_popup_cwd = { link = 'Pmenu' },
  Lf_hl_popup_prompt = { link = 'Orange' },
  Lf_hl_popup_window = { link = 'Pmenu' },
  Lf_hl_gtagsHighlight = { link = 'Visual' },
  Lf_hl_rgHighlight = { link = 'Visual' },
  Lf_hl_selection = { link = 'DiffAdd' },
  Lf_hl_cursorline = { fg = '#ddc7a1' },
  Lf_hl_popup_inputText = { fg = bright_green, bg = '#3c3836' },
  Lf_hl_popup_cursor = { fg = '#1d2021', bg = bright_green },
  Lf_hl_popup_total = { fg = '#1d2021', bg = bright_yellow },
  Lf_hl_popup_lineInfo = { fg = '#1d2021', bg = bright_green },
  Lf_hl_popup_regexMode = { fg = '#ddc7a1', bg = bright_black },
  Lf_hl_popup_fuzzyMode = { fg = '#1d2021', bg = '#7c6f64' },
  Lf_hl_popup_fullPathMode = { fg = '#ddc7a1', bg = bright_black },
  Lf_hl_popup_nameOnlyMode = { fg = '#ddc7a1', bg = bright_black },
  Lf_hl_popup_category = { fg = '#1d2021', bg = '#928374' },
  Lf_hl_popup_inputMode = { fg = '#1d2021', bg = '#a89984', bold = true },
  Lf_hl_popup_normalMode = { fg = '#1d2021', bg = '#a89984', bold = true },
  Lf_hl_matchRefine = { fg = bright_red, bold = true },
  Lf_hl_match4 = { fg = '#e78a4e', bold = true },
  Lf_hl_match3 = { fg = bright_magenta, bold = true },
  Lf_hl_match2 = { fg = bright_blue, bold = true },
  Lf_hl_match1 = { fg = bright_cyan, bold = true },
  Lf_hl_match0 = { fg = bright_green, bold = true },
  Lf_hl_match = { fg = bright_green, bold = true },
  SyntasticWarningLine = { link = 'WarningLine' },
  SyntasticErrorLine = { link = 'ErrorLine' },
  SyntasticErrorSign = { link = 'RedSign' },
  NeomakeVirtualtextMessag = { link = 'VirtualTextHint' },
  NeomakeVirtualtextInfo = { link = 'VirtualTextInfo' },
  NeomakeVirtualtextWarning = { link = 'VirtualTextWarning' },
  NeomakeVirtualtextError = { link = 'VirtualTextError' },
  NeomakeMessageSign = { link = 'AquaSign' },
  NeomakeInfoSign = { link = 'BlueSign' },
  NeomakeWarningSign = { link = 'YellowSign' },
  NeomakeErrorSign = { link = 'RedSign' },
  ALEVirtualTextStyleWarning = { link = 'VirtualTextHint' },
  ALEVirtualTextStyleError = { link = 'VirtualTextHint' },
  ALEVirtualTextInfo = { link = 'VirtualTextInfo' },
  ALEVirtualTextWarning = { link = 'VirtualTextWarning' },
  ALEVirtualTextError = { link = 'VirtualTextError' },
  ALEInfoLine = { link = 'InfoLine' },
  ALEWarningLine = { link = 'WarningLine' },
  ALEErrorLine = { link = 'ErrorLine' },
  ALEInfoSign = { link = 'BlueSign' },
  ALEWarningSign = { link = 'YellowSign' },
  ALEErrorSign = { link = 'RedSign' },
  ALEInfo = { link = 'InfoText' },
  ALEWarning = { link = 'WarningText' },
  GitGutterChangeDelete = { link = 'PurpleSign' },
  YcmInlayHint = { link = 'LineNr' },
  YcmWarningLine = { link = 'WarningLine' },
  YcmErrorLine = { link = 'ErrorLine' },
  YcmWarningSign = { link = 'YellowSign' },
  YcmErrorSign = { link = 'RedSign' },
  LspSemanticOperator = { link = 'TSOperator' },
  LspSemanticRegexp = { link = 'TSStringRegex' },
  LspSemanticNumber = { link = 'TSNumber' },
  LspSemanticString = { link = 'TSString' },
  LspSemanticComment = { link = 'TSComment' },
  LspSemanticModifier = { link = 'TSOperator' },
  LspSemanticKeyword = { link = 'TSKeyword' },
  LspSemanticMethod = { link = 'TSMethod' },
  LspSemanticFunction = { link = 'TSFunction' },
  LspSemanticEvents = { link = 'TSLabel' },
  LspSemanticEnumMember = { link = 'TSVariableBuiltin' },
  LspSemanticProperty = { link = 'TSProperty' },
  LspSemanticVariable = { link = 'TSVariable' },
  LspSemanticParameter = { link = 'TSParameter' },
  LspSemanticTypeParameter = { link = 'TSType' },
  LspSemanticStruct = { link = 'TSType' },
  LspSemanticInterface = { link = 'TSType' },
  LspSemanticEnum = { link = 'TSType' },
  LspSemanticClass = { link = 'TSType' },
  LspSemanticType = { link = 'TSType' },
  lspInlayHintsParameter = { link = 'LineNr' },
  lspInlayHintsType = { link = 'LineNr' },
  lspReference = { link = 'CurrentWord' },
  LspHintHighlight = { link = 'HintText' },
  LspInformationHighlight = { link = 'InfoText' },
  LspWarningHighlight = { link = 'WarningText' },
  LspErrorHighlight = { link = 'ErrorText' },
  NvimInvalidStringQuote = { link = 'NvimInvalidString' },
  NvimInvalidString = { link = 'NvimInvalidValue' },
  NvimInvalidEnvironmentName = { link = 'NvimInvalidIdentifier' },
  NvimInvalidOptionScopeDelimiter = { link = 'NvimInvalidIdentifierScopeDelimiter' },
  NvimInvalidOptionScope = { link = 'NvimInvalidIdentifierScope' },
  NvimInvalidOptionName = { link = 'NvimInvalidIdentifier' },
  NvimInvalidOptionSigil = { link = 'NvimInvalidIdentifier' },
  NvimInvalidNumberPrefix = { link = 'NvimInvalidNumber' },
  NvimInvalidNumber = { link = 'NvimInvalidValue' },
  NvimInvalidRegister = { link = 'NvimInvalidValue' },
  NvimInvalidArrow = { link = 'NvimInvalidDelimiter' },
  NvimInvalidComma = { link = 'NvimInvalidDelimiter' },
  NvimInvalidColon = { link = 'NvimInvalidDelimiter' },
  NvimInvalidIdentifierKey = { link = 'NvimInvalidIdentifier' },
  NvimInvalidIdentifierName = { link = 'NvimInvalidIdentifier' },
  MarkdownH3 = {  },
  diffAdded = { link = 'Green' },
  VimGroup = {  },
  Delimeter = {  },
  Terminal = { fg = bright_white, bg = '#1d2021' },
  ErrorText = { undercurl = true, special = bright_red },
  InfoText = { undercurl = true, special = bright_blue },
  GitGutterChange = { link = 'BlueSign' },
  LspCodeLens = { link = 'VirtualTextInfo' },
  LspCodeLensSeparator = { link = 'VirtualTextHint' },
  diffFile = { link = 'Aqua' },
  diffNewFile = { link = 'Orange' },
  diffRemoved = { link = 'Red' },
  ToolbarLine = { fg = '#ddc7a1', bg = '#3c3836' },
  YellowSign = { fg = bright_yellow },
  BlueSign = { fg = bright_blue },
  GreenSign = { fg = bright_green },
  Boolean = { fg = bright_magenta },
  TSFloat = { link = 'Purple' },
  TSFunction = { link = 'GreenBold' },
  TSFuncBuiltin = { link = 'GreenBold' },
  TSFuncMacro = { link = 'GreenBold' },
  TSParameter = { link = 'Fg' },
  TSMethod = { link = 'GreenBold' },
  TSField = { link = 'Green' },
  TSProperty = { link = 'Fg' },
  TSConstructor = { link = 'GreenBold' },
  TSConditional = { link = 'Red' },
  TSRepeat = { link = 'Red' },
  TSLabel = { link = 'Orange' },
  TSOperator = { link = 'Orange' },
  TSKeyword = { link = 'Red' },
  TSException = { link = 'Red' },
  TSType = { link = 'Yellow' },
  TSStorageClass = { link = 'Orange' },
  TSInclude = { link = 'Red' },
  MatchParen = { bg = '#3c3836' },
  Ignore = { fg = '#928374' },
  NvimInternalError = { fg = '#ff0000', bg = '#ff0000' },
  NvimAssignment = { link = 'Operator' },
  NvimPlainAssignment = { link = 'NvimAssignment' },
  NvimAugmentedAssignment = { link = 'NvimAssignment' },
  NvimAssignmentWithAddition = { link = 'NvimAugmentedAssignment' },
  NvimAssignmentWithSubtraction = { link = 'NvimAugmentedAssignment' },
  NvimAssignmentWithConcatenation = { link = 'NvimAugmentedAssignment' },
  NvimOperator = { link = 'Operator' },
  NvimUnaryOperator = { link = 'NvimOperator' },
  NvimUnaryPlus = { link = 'NvimUnaryOperator' },
  NvimUnaryMinus = { link = 'NvimUnaryOperator' },
  NvimNot = { link = 'NvimUnaryOperator' },
  NvimBinaryOperator = { link = 'NvimOperator' },
  NvimComparison = { link = 'NvimBinaryOperator' },
  NvimComparisonModifier = { link = 'NvimComparison' },
  NvimBinaryPlus = { link = 'NvimBinaryOperator' },
  NvimBinaryMinus = { link = 'NvimBinaryOperator' },
  NvimConcat = { link = 'NvimBinaryOperator' },
  NvimConcatOrSubscript = { link = 'NvimConcat' },
  NvimOr = { link = 'NvimBinaryOperator' },
  NvimAnd = { link = 'NvimBinaryOperator' },
  NvimMultiplication = { link = 'NvimBinaryOperator' },
  NvimDivision = { link = 'NvimBinaryOperator' },
  NvimMod = { link = 'NvimBinaryOperator' },
  NvimTernary = { link = 'NvimOperator' },
  NvimTernaryColon = { link = 'NvimTernary' },
  NvimParenthesis = { link = 'Delimiter' },
  NvimLambda = { link = 'NvimParenthesis' },
  NvimNestingParenthesis = { link = 'NvimParenthesis' },
  NvimCallingParenthesis = { link = 'NvimParenthesis' },
  NvimSubscript = { link = 'NvimParenthesis' },
  NvimSubscriptBracket = { link = 'NvimSubscript' },
  NvimSubscriptColon = { link = 'NvimSubscript' },
  NvimCurly = { link = 'NvimSubscript' },
  NvimContainer = { link = 'NvimParenthesis' },
  NvimDict = { link = 'NvimContainer' },
  NvimList = { link = 'NvimContainer' },
  NvimIdentifier = { link = 'Identifier' },
  NvimIdentifierScope = { link = 'NvimIdentifier' },
  NvimIdentifierScopeDelimiter = { link = 'NvimIdentifier' },
  NvimIdentifierName = { link = 'NvimIdentifier' },
  NvimIdentifierKey = { link = 'NvimIdentifier' },
  NvimColon = { link = 'Delimiter' },
  NvimComma = { link = 'Delimiter' },
  NvimArrow = { link = 'Delimiter' },
  NvimRegister = { link = 'SpecialChar' },
  NvimNumber = { link = 'Number' },
  NvimFloat = { link = 'NvimNumber' },
  NvimNumberPrefix = { link = 'Type' },
  NvimOptionSigil = { link = 'Type' },
  NvimOptionName = { link = 'NvimIdentifier' },
  NvimOptionScope = { link = 'NvimIdentifierScope' },
  NvimOptionScopeDelimiter = { link = 'NvimIdentifierScopeDelimiter' },
  NvimEnvironmentSigil = { link = 'NvimOptionSigil' },
  NvimEnvironmentName = { link = 'NvimIdentifier' },
  NvimString = { link = 'String' },
  NvimStringBody = { link = 'NvimString' },
  NvimStringQuote = { link = 'NvimString' },
  NvimStringSpecial = { link = 'SpecialChar' },
  NvimSingleQuote = { link = 'NvimStringQuote' },
  NvimSingleQuotedBody = { link = 'NvimStringBody' },
  NvimSingleQuotedQuote = { link = 'NvimStringSpecial' },
  NvimDoubleQuote = { link = 'NvimStringQuote' },
  NvimDoubleQuotedBody = { link = 'NvimStringBody' },
  NvimDoubleQuotedEscape = { link = 'NvimStringSpecial' },
  NvimFigureBrace = { link = 'NvimInternalError' },
  NvimSingleQuotedUnknownEscape = { link = 'NvimInternalError' },
  NvimSpacing = { link = 'Normal' },
  NvimInvalidSingleQuotedUnknownEscape = { link = 'NvimInternalError' },
  NvimInvalid = { link = 'Error' },
  NvimInvalidAssignment = { link = 'NvimInvalid' },
  NvimInvalidPlainAssignment = { link = 'NvimInvalidAssignment' },
  NvimInvalidAugmentedAssignment = { link = 'NvimInvalidAssignment' },
  NvimInvalidAssignmentWithAddition = { link = 'NvimInvalidAugmentedAssignment' },
  NvimInvalidAssignmentWithSubtraction = { link = 'NvimInvalidAugmentedAssignment' },
  NvimInvalidAssignmentWithConcatenation = { link = 'NvimInvalidAugmentedAssignment' },
  NvimInvalidOperator = { link = 'NvimInvalid' },
  NvimInvalidUnaryOperator = { link = 'NvimInvalidOperator' },
  NvimInvalidUnaryPlus = { link = 'NvimInvalidUnaryOperator' },
  NvimInvalidUnaryMinus = { link = 'NvimInvalidUnaryOperator' },
  NvimInvalidNot = { link = 'NvimInvalidUnaryOperator' },
  NvimInvalidBinaryOperator = { link = 'NvimInvalidOperator' },
  NvimInvalidComparison = { link = 'NvimInvalidBinaryOperator' },
  NvimInvalidComparisonModifier = { link = 'NvimInvalidComparison' },
  NvimInvalidBinaryPlus = { link = 'NvimInvalidBinaryOperator' },
  NvimInvalidBinaryMinus = { link = 'NvimInvalidBinaryOperator' },
  NvimInvalidConcat = { link = 'NvimInvalidBinaryOperator' },
  NvimInvalidConcatOrSubscript = { link = 'NvimInvalidConcat' },
  NvimInvalidOr = { link = 'NvimInvalidBinaryOperator' },
  NvimInvalidAnd = { link = 'NvimInvalidBinaryOperator' },
  NvimInvalidMultiplication = { link = 'NvimInvalidBinaryOperator' },
  NvimInvalidDivision = { link = 'NvimInvalidBinaryOperator' },
  NvimInvalidMod = { link = 'NvimInvalidBinaryOperator' },
  NvimInvalidTernary = { link = 'NvimInvalidOperator' },
  NvimInvalidTernaryColon = { link = 'NvimInvalidTernary' },
  NvimInvalidDelimiter = { link = 'NvimInvalid' },
  NvimInvalidParenthesis = { link = 'NvimInvalidDelimiter' },
  NvimInvalidLambda = { link = 'NvimInvalidParenthesis' },
  NvimInvalidNestingParenthesis = { link = 'NvimInvalidParenthesis' },
  NvimInvalidCallingParenthesis = { link = 'NvimInvalidParenthesis' },
  NvimInvalidSubscript = { link = 'NvimInvalidParenthesis' },
  NvimInvalidSubscriptBracket = { link = 'NvimInvalidSubscript' },
  NvimInvalidSubscriptColon = { link = 'NvimInvalidSubscript' },
  NvimInvalidCurly = { link = 'NvimInvalidSubscript' },
  NvimInvalidContainer = { link = 'NvimInvalidParenthesis' },
  NvimInvalidDict = { link = 'NvimInvalidContainer' },
  NvimInvalidList = { link = 'NvimInvalidContainer' },
  NvimInvalidValue = { link = 'NvimInvalid' },
  NvimInvalidIdentifier = { link = 'NvimInvalidValue' },
  NvimInvalidIdentifierScope = { link = 'NvimInvalidIdentifier' },
  NvimInvalidIdentifierScopeDelimiter = { link = 'NvimInvalidIdentifier' },
  SignColumn = { fg = bright_white },
  CursorLineFold = { link = 'FoldColumn' },
  FoldColumn = { fg = bright_black },
  StatusLine = { fg = '#ddc7a1', bg = '#282828' },
  StatusLineNC = { fg = '#928374', bg = '#282828' },
  WinSeparator = { link = 'VertSplit' },
  VertSplit = { fg = bright_black },
  Title = { fg = '#e78a4e', bold = true },
  Visual = { bg = '#3c3836' },
  VisualNC = {  },
  WildMenu = { fg = '#000000', bg = '#ffff00' },
  Folded = { fg = '#928374', bg = '#282828' },
  DiffAdd = { bg = '#32361a' },
  DiffChange = { bg = '#0d3138' },
  DiffDelete = { bg = '#3c1f1e' },
  DiffText = { fg = '#1d2021', bg = bright_blue },
  Conceal = { fg = bright_black },
  SpellBad = { undercurl = true, special = bright_red },
  NvimInvalidStringSpecial = { link = 'NvimStringSpecial' },
  NvimInvalidSingleQuote = { link = 'NvimInvalidStringQuote' },
  NvimInvalidSingleQuotedBody = { link = 'NvimInvalidStringBody' },
  NvimInvalidSingleQuotedQuote = { link = 'NvimInvalidStringSpecial' },
  NvimInvalidDoubleQuote = { link = 'NvimInvalidStringQuote' },
  NvimInvalidDoubleQuotedBody = { link = 'NvimInvalidStringBody' },
  NvimInvalidDoubleQuotedEscape = { link = 'NvimInvalidStringSpecial' },
  NvimInvalidDoubleQuotedUnknownEscape = { link = 'NvimInvalidValue' },
  NvimInvalidFigureBrace = { link = 'NvimInvalidDelimiter' },
  NvimInvalidSpacing = { link = 'ErrorMsg' },
  NvimDoubleQuotedUnknownEscape = { link = 'NvimInvalidValue' },
  MarkdownBoldDelimiter = {  },
  MarkdownBold = {  },
  MarkdownHeadingRule = {  },
  MarkdownHeading = {  },
  MarkdownHeadingDelimiter = {  },
  MarkdownH6 = {  },
  MarkdownH5 = {  },
  MarkdownH4 = {  },
  Normal = { fg = bright_white, bg = '#1d2021' },
  MarkdownH2 = {  },
  MarkdownH1 = {  },
  MarkdownRule = {  },
  NeomakeStatColorTypeW = {  },
  NeomakeStatColorTypeE = {  },
  NeomakeStatColorDefault = {  },
  NeomakeStatusGoodNC = {  },
  NeomakeStatusGood = {  },
  NeomakeVirtualtextErrorDefault = {  },
  NeomakeVirtualtextWarningDefault = {  },
  CurrentWord = { bg = '#32302f' },
  NeomakeVirtualtextMessageDefault = {  },
  NeomakeVirtualtextInfoDefault = {  },
  NeomakeMessage = { link = 'HintText' },
  HintText = { undercurl = true, special = bright_green },
  NeomakeWarning = { link = 'WarningText' },
  WarningText = { undercurl = true, special = bright_yellow },
  NeomakeInfo = { link = 'InfoText' },
  MatchParenCur = { bold = true },
  MatchWord = { underline = true },
  MatchWordCur = { underline = true },
  EasyMotionTarget = { link = 'Search' },
  EasyMotionShade = { link = 'Grey' },
  SneakLabelMask = { fg = bright_green, bg = bright_green },
  Sneak = { link = 'Search' },
  SneakLabel = { link = 'Search' },
  SneakScope = { link = 'DiffText' },
  CleverFDefaultLabel = { link = 'Search' },
  Question = { fg = bright_yellow },
  multiple_cursors_visual = { link = 'Visual' },
  VMCursor = { fg = bright_blue, bg = bright_black },
  CurrentWordTwins = { link = 'CurrentWord' },
  illuminatedWord = { link = 'CurrentWord' },
  IlluminatedWordText = { link = 'CurrentWord' },
  IlluminatedWordRead = { link = 'CurrentWord' },
  IlluminatedWordWrite = { link = 'CurrentWord' },
  CursorWord0 = { link = 'CurrentWord' },
  CursorWord1 = { link = 'CurrentWord' },
  RainbowLevel0 = { link = 'Red' },
  RainbowLevel1 = { link = 'Orange' },
  RainbowLevel2 = { link = 'Yellow' },
  LspDiagnosticsDefaultError = { link = 'DiagnosticError' },
  LspDiagnosticsDefaultWarning = { link = 'DiagnosticWarn' },
  LspDiagnosticsDefaultInformation = { link = 'DiagnosticInfo' },
  LspDiagnosticsDefaultHint = { link = 'DiagnosticHint' },
  LspDiagnosticsVirtualTextError = { link = 'DiagnosticVirtualTextError' },
  LspDiagnosticsVirtualTextWarning = { link = 'DiagnosticVirtualTextWarn' },
  LspDiagnosticsVirtualTextInformation = { link = 'DiagnosticVirtualTextInfo' },
  LspDiagnosticsVirtualTextHint = { link = 'DiagnosticVirtualTextHint' },
  LspDiagnosticsUnderlineError = { link = 'DiagnosticUnderlineError' },
  LspDiagnosticsUnderlineWarning = { link = 'DiagnosticUnderlineWarn' },
  LspDiagnosticsUnderlineInformation = { link = 'DiagnosticUnderlineInfo' },
  LspDiagnosticsUnderlineHint = { link = 'DiagnosticUnderlineHint' },
  LspDiagnosticsSignError = { link = 'DiagnosticSignError' },
  LspDiagnosticsSignWarning = { link = 'DiagnosticSignWarn' },
  LspDiagnosticsSignInformation = { link = 'DiagnosticSignInfo' },
  LspDiagnosticsSignHint = { link = 'DiagnosticSignHint' },
  healthError = { link = 'Red' },
  healthSuccess = { link = 'Green' },
  healthWarning = { link = 'Yellow' },
  Yellow = { fg = bright_yellow },
  Fg = { fg = bright_white },
  Blue = { fg = bright_blue },
  Purple = { fg = bright_magenta },
  RedItalic = { fg = bright_red },
  OrangeItalic = { fg = '#e78a4e' },
  YellowItalic = { fg = bright_yellow },
  GreenItalic = { fg = bright_green },
  AquaItalic = { fg = bright_cyan },
  BlueItalic = { fg = bright_blue },
  PurpleItalic = { fg = bright_magenta },
  RedBold = { fg = bright_red },
  OrangeBold = { fg = '#e78a4e' },
  YellowBold = { fg = bright_yellow },
  GreenBold = { fg = bright_green },
  AquaBold = { fg = bright_cyan },
  BlueBold = { fg = bright_blue },
  PurpleBold = { fg = bright_magenta },
  OrangeSign = { fg = '#e78a4e' },
  AquaSign = { fg = bright_cyan },
  ErrorLine = {  },
  WarningLine = {  },
  InfoLine = {  },
  HintLine = {  },
  TSStrong = { bold = true },
  TSEmphasis = { italic = true },
  TSUnderline = { underline = true },
  TSNote = { fg = '#1d2021', bg = bright_blue, bold = true },
  TSWarning = { fg = '#1d2021', bg = bright_yellow, bold = true },
  TSDanger = { fg = '#1d2021', bg = bright_red, bold = true },
  TSAnnotation = { link = 'Purple' },
  TSAttribute = { link = 'Purple' },
  TSKeywordFunction = { link = 'Red' },
  TSKeywordOperator = { link = 'Orange' },
  TSNamespace = { link = 'YellowItalic' },
  TSNone = { link = 'Fg' },
  TSParameterReference = { link = 'Fg' },
  TSStringRegex = { link = 'Green' },
  TSSymbol = { link = 'Fg' },
  TSTag = { link = 'Orange' },
  TSTagDelimiter = { link = 'Green' },
  TSStrike = { link = 'Grey' },
  TSMath = { link = 'Blue' },
  TSTypeBuiltin = { link = 'YellowItalic' },
  TSURI = { link = 'MarkdownUrl' },
  TSVariable = { link = 'Fg' },
  TSVariableBuiltin = { link = 'BlueItalic' },
  CocHoverRange = { underline = true, bold = true },
  CocSearch = { fg = bright_green, bold = true },
  CocPumSearch = { fg = bright_green, bold = true },
  CocMarkdownHeader = { fg = '#e78a4e', bold = true },
  CocMarkdownLink = { underline = true, fg = bright_green },
  CocMarkdownCode = { link = 'Green' },
  CocPumShortcut = { link = 'Grey' },
  CocPumVirtualText = { link = 'Grey' },
  CocPumMenu = { link = 'Pmenu' },
  CocMenuSel = { link = 'PmenuSel' },
  CocDisabled = { link = 'Grey' },
  CocSnippetVisual = { link = 'DiffAdd' },
  CocInlayHint = { link = 'LineNr' },
  CocNotificationProgress = { link = 'Green' },
  CocNotificationButton = { link = 'PmenuSel' },
  CocSemClass = { link = 'TSType' },
  CocSemEnum = { link = 'TSType' },
  CocSemInterface = { link = 'TSType' },
  CocSemStruct = { link = 'TSType' },
  CocSemTypeParameter = { link = 'TSType' },
  HopNextKey = { fg = '#e78a4e', bold = true },
  CocSemEnumMember = { link = 'TSVariableBuiltin' },
  HopNextKey1 = { fg = bright_green, bold = true },
  HopNextKey2 = { link = 'Green' },
  HopPreview = { fg = '#b8bb26', bold = true },
  CocWarningFloat = { link = 'WarningFloat' },
  CocInfoFloat = { link = 'InfoFloat' },
  CocHintFloat = { link = 'HintFloat' },
  CocFloatDividingLine = { link = 'Grey' },
  CocErrorHighlight = { link = 'ErrorText' },
  CocWarningHighlight = { link = 'WarningText' },
  CocInfoHighlight = { link = 'InfoText' },
  CocHintHighlight = { link = 'HintText' },
  CocHighlightText = { link = 'CurrentWord' },
  CocErrorSign = { link = 'RedSign' },
  CocWarningSign = { link = 'YellowSign' },
  CocInfoSign = { link = 'BlueSign' },
  CocHintSign = { link = 'GreenSign' },
  CocWarningVirtualText = { link = 'VirtualTextWarning' },
  CocErrorVirtualText = { link = 'VirtualTextError' },
  CocInfoVirtualText = { link = 'VirtualTextInfo' },
  CocHintVirtualText = { link = 'VirtualTextHint' },
  CocErrorLine = { link = 'ErrorLine' },
  CocWarningLine = { link = 'WarningLine' },
  CocInfoLine = { link = 'InfoLine' },
  CocHintLine = { link = 'HintLine' },
  CocCodeLens = { link = 'Grey' },
  CocFadeOut = { link = 'Grey' },
  CocStrikeThrough = { link = 'Grey' },
  CocListMode = { link = 'StatusLine' },
  CocListPath = { link = 'StatusLine' },
  CocSelectedText = { link = 'Orange' },
  CocListsLine = { link = 'Fg' },
  CocListsDesc = { link = 'Grey' },
  HighlightedyankRegion = { link = 'Visual' },
  CocGitAddedSign = { link = 'GreenSign' },
  CocGitChangeRemovedSign = { link = 'PurpleSign' },
  CocGitChangedSign = { link = 'BlueSign' },
  CocGitRemovedSign = { link = 'RedSign' },
  CocGitTopRemovedSign = { link = 'RedSign' },
  LspErrorVirtual = { link = 'VirtualTextError' },
  LspWarningVirtual = { link = 'VirtualTextWarning' },
  LspInformationVirtual = { link = 'VirtualTextInfo' },
  LspHintVirtual = { link = 'VirtualTextHint' },
  SpellCap = { undercurl = true, special = bright_blue },
  SpellRare = { undercurl = true, special = bright_magenta },
  SpellLocal = { undercurl = true, special = bright_cyan },
  Pmenu = { fg = '#ddc7a1', bg = '#3c3836' },
  PmenuSel = { fg = '#3c3836', bg = '#a89984' },
  PmenuSbar = { bg = '#3c3836' },
  PmenuThumb = { bg = '#7c6f64' },
  TabLine = { fg = '#ddc7a1', bg = bright_black },
  TabLineSel = { fg = '#1d2021', bg = '#a89984' },
  TabLineFill = { fg = '#ddc7a1', bg = '#282828' },
  CursorColumn = { bg = '#282828' },
  CursorLine = { bg = '#282828' },
  ColorColumn = { bg = '#282828' },
  QuickFixLine = { fg = bright_magenta, bold = true },
  Whitespace = { fg = bright_black },
  NormalNC = {  },
  MsgSeparator = { link = 'StatusLine' },
  MsgArea = {  },
  FloatBorder = { fg = '#928374', bg = '#3c3836' },
  WinBar = { bold = true },
  WinBarNC = { link = 'Grey' },
  Grey = { fg = '#928374' },
  Cursor = { reverse = true },
  lCursor = { fg = '#1d2021', bg = bright_white },
  Substitute = { fg = '#1d2021', bg = bright_yellow },
  FloatShadow = { bg = '#000000', blend = 80 },
  FloatShadowThrough = { bg = '#000000', blend = 100 },
  RedrawDebugNormal = { reverse = true },
  RedrawDebugClear = { bg = '#ffff00' },
  RedrawDebugComposed = { bg = '#008000' },
  RedrawDebugRecompose = { bg = '#ff0000' },
  Todo = { italic = true, fg = bright_magenta },
  ALEError = { link = 'ErrorText' },
  Character = { fg = bright_green },
  Float = { fg = bright_magenta },
  Identifier = { fg = bright_blue },
  Conditional = { fg = bright_red },
  Statement = { fg = bright_red },
  Repeat = { fg = bright_red },
  Label = { fg = '#e78a4e' },
  Exception = { fg = bright_red },
  Include = { fg = bright_magenta },
  PreProc = { fg = bright_magenta },
  Define = { fg = bright_magenta },
  Macro = { fg = bright_cyan },
  PreCondit = { fg = bright_magenta },
  StorageClass = { fg = '#e78a4e' },
  Structure = { fg = '#e78a4e' },
  Typedef = { fg = bright_red },
  Tag = { fg = '#e78a4e' },
  Special = { fg = bright_yellow },
  SpecialChar = { fg = bright_yellow },
  Delimiter = { fg = bright_white },
  SpecialComment = { italic = true, fg = '#928374' },
  Debug = { fg = '#e78a4e' },
  DiagnosticError = { fg = '#ff0000' },
  DiagnosticWarn = { fg = '#ffa500' },
  DiagnosticInfo = { fg = '#add8e6' },
  DiagnosticHint = { fg = '#d3d3d3' },
  VirtualTextError = { link = 'Grey' },
  VirtualTextWarning = { link = 'Grey' },
  VirtualTextInfo = { link = 'Grey' },
  VirtualTextHint = { link = 'Grey' },
  ErrorFloat = { fg = bright_red, bg = '#3c3836' },
  WarningFloat = { fg = bright_yellow, bg = '#3c3836' },
  InfoFloat = { fg = bright_blue, bg = '#3c3836' },
  HintFloat = { fg = bright_green, bg = '#3c3836' },
  RedSign = { fg = bright_red },
  LspReferenceText = { link = 'CurrentWord' },
  LspReferenceRead = { link = 'CurrentWord' },
  LspReferenceWrite = { link = 'CurrentWord' },
  TSText = { link = 'Green' },
  Underlined = { underline = true },
  NeomakeError = { link = 'ErrorText' },
  Comment = { italic = true, fg = '#928374' },
  GitGutterDelete = { link = 'RedSign' },
  GitGutterAdd = { link = 'GreenSign' },
  Aqua = { fg = bright_cyan },
  Red = { fg = bright_red },
  Green = { fg = bright_green },
  VimOption = {  },
  ToolbarButton = { fg = '#1d2021', bg = '#a89984' },
  StatusLineTermNC = { fg = '#928374', bg = '#282828' },
  GPGHighlightUnknownRecipient = { link = 'ErrorMsg' },
  GPGError = { link = 'ErrorMsg' },
  GPGWarning = { link = 'WarningMsg' },
  SyntasticWarningSign = { link = 'YellowSign' },
  SyntasticErrorSing = {  },
  SyntasticWarning = { link = 'WarningText' },
  SyntasticError = { link = 'ErrorText' },
  YcmWarningSection = { link = 'WarningText' },
  YcmErrorSection = { link = 'ErrorText' },
  MarkdownOrderedListMarker = {  },
  MarkdownListMarker = {  },
  MarkdownCodeBlock = {  },
  MarkdownCodeDelimiter = {  },
  MarkdownCode = {  },
  MarkdownLinkTextDelimiter = {  },
  MarkdownLinkDelimiter = {  },
  MarkdownLinkText = {  },
  MarkdownUrl = {  },
  MarkdownItalicDelimiter = {  },
  MarkdownItalic = {  },
  Italic = {  },
  debugPC = { fg = '#1d2021', bg = bright_green },
  TSNodeUnmatched = { fg = '#666666' },
  TSNodeKey = { fg = '#ff007c', bold = true },
  Type = { fg = bright_yellow },
  TSPunctSpecial = { link = 'Blue' },
  TSPunctDelimiter = { link = 'Grey' },
  TSPunctBracket = { link = 'Fg' },
  vCursor = { link = 'Cursor' },
  iCursor = { link = 'Cursor' },
  CursorIM = { link = 'Cursor' },
  VisualNOS = { bg = '#3c3836' },
  debugBreakpoint = { fg = '#1d2021', bg = bright_red },
  LspDiagnosticsFloatingError = { link = 'DiagnosticFloatingError' },
}
for k, v in pairs(theme) do
  vim.api.nvim_set_hl(0, k, v)
end
